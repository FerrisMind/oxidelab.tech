const fs = require("fs");
const path = require("path");

console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞...\n");

const outDir = path.join(__dirname, "out");

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ
function checkStaticFiles() {
  console.log("üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤:");

  const staticFiles = ["index.html", "404.html"];
  staticFiles.forEach((file) => {
    const filePath = path.join(outDir, file);
    if (fs.existsSync(filePath)) {
      const content = fs.readFileSync(filePath, "utf8");

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
      if (content.includes("__NEXT_DATA__")) {
        console.log(`‚úÖ ${file} - —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ Next.js`);
      } else {
        console.log(`‚ö†Ô∏è  ${file} - –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`);
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö API –≤—ã–∑–æ–≤–æ–≤
      if (content.includes("/api/")) {
        console.log(`‚ùå ${file} - —Å–æ–¥–µ—Ä–∂–∏—Ç API –≤—ã–∑–æ–≤—ã!`);
      } else {
        console.log(`‚úÖ ${file} - –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç API –≤—ã–∑–æ–≤—ã`);
      }
    }
  });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º JavaScript —Ñ–∞–π–ª—ã
function checkJavaScriptFiles() {
  console.log("\nüìú –ü—Ä–æ–≤–µ—Ä–∫–∞ JavaScript —Ñ–∞–π–ª–æ–≤:");

  const jsDir = path.join(outDir, "_next", "static", "chunks");
  if (fs.existsSync(jsDir)) {
    const files = fs.readdirSync(jsDir);
    const jsFiles = files.filter((file) => file.endsWith(".js"));

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${jsFiles.length} JavaScript —Ñ–∞–π–ª–æ–≤`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    jsFiles.slice(0, 3).forEach((file) => {
      const filePath = path.join(jsDir, file);
      const content = fs.readFileSync(filePath, "utf8");

      if (content.includes("require(") || content.includes("import(")) {
        console.log(`‚úÖ ${file} - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –º–æ–¥—É–ª–∏`);
      } else {
        console.log(`‚úÖ ${file} - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–¥`);
      }
    });
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function checkNoServerFiles() {
  console.log("\nüö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:");

  const serverPatterns = ["api/", "server/", "middleware.js", "middleware.ts"];

  let hasServerFiles = false;

  function checkDirectory(dir) {
    if (!fs.existsSync(dir)) return;

    const items = fs.readdirSync(dir);
    items.forEach((item) => {
      const itemPath = path.join(dir, item);
      const stat = fs.statSync(itemPath);

      if (stat.isDirectory()) {
        checkDirectory(itemPath);
      } else {
        serverPatterns.forEach((pattern) => {
          if (item.includes(pattern) || itemPath.includes(pattern)) {
            console.log(`‚ùå –ù–∞–π–¥–µ–Ω —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ñ–∞–π–ª: ${itemPath}`);
            hasServerFiles = true;
          }
        });
      }
    });
  }

  checkDirectory(outDir);

  if (!hasServerFiles) {
    console.log("‚úÖ –°–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ
function checkStaticResources() {
  console.log("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤:");

  const requiredDirs = ["_next", "static"];
  requiredDirs.forEach((dir) => {
    const dirPath = path.join(outDir, dir);
    if (fs.existsSync(dirPath)) {
      console.log(`‚úÖ ${dir}/ - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã –Ω–∞–π–¥–µ–Ω—ã`);
    } else {
      console.log(`‚ùå ${dir}/ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!`);
    }
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
function main() {
  if (!fs.existsSync(outDir)) {
    console.log("‚ùå –ü–∞–ø–∫–∞ out/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ npm run build");
    return;
  }

  checkStaticFiles();
  checkJavaScriptFiles();
  checkNoServerFiles();
  checkStaticResources();

  console.log("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
  console.log("\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç:");
  console.log("‚Ä¢ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–æ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã ‚úÖ");
  console.log("‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Node.js ‚úÖ");
  console.log("‚Ä¢ –í–µ—Å—å JavaScript –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞ ‚úÖ");
  console.log("\nüéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥–∞!");
}

main();
